import{v as e}from"./server.mjs";import{D as r}from"../routes/renderer.mjs";import"../nitro/nitro.mjs";import"node:buffer";import"node:timers";import"node:events";import"node:process";import"node:util";import"../_/shared.esm-bundler.mjs";const o={__name:"ProseScript",__ssrInlineRender:!0,props:{src:{type:String,default:""}},setup:o=>(o,t,s,n)=>{e.unref(false)?t(`<div${r(n)}> Rendering the <code>script</code> element is dangerous and is disabled by default. Consider implementing your own <code>ProseScript</code> element to have control over script rendering. </div>`):t("\x3c!----\x3e")}},t=o.setup;o.setup=(r,o)=>{const s=e.useSSRContext();return(s.modules||(s.modules=new Set)).add("../node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseScript.vue"),t?t(r,o):void 0};export{o as default};
//# sourceMappingURL=ProseScript-DbxvxDJ7.mjs.map
