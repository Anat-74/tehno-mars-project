@use './functions' as *;
@use './mixins' as m;
@use './container' as c;

$font-family: "Montserrat";
$font-family2: "RubikBurned";

body {
   background-color: var(--bg);
   color: var(--color);
   transition: background-color var(--transition-duration);
   @include m.adaptiveValue("font-size", 16, 14);
}

body:has(dialog[open]) {
   overflow: hidden;

   .header {
      opacity: .4;
   }
   .footer {
      display: none;
   }
 }

 body:has(.dialog-hamburger[open]) {
   .btn_hamburger {
      span {
         width: 0;
      }
      &::before,
      &::after {
         background-color: var( --dark-color);
      }
      &::before {
         top: calc(50% - toRem(1));
         transform: rotate(-45deg);
      }
      &::after {
         bottom: calc(50% - toRem(1));
         transform: rotate(45deg);
      }
   }
 }

 main:has(.dialog-menu[open]) {
   transition: all .1s linear forwards;
   filter: blur(7px);

   .btn_dialog-menu {
      
   }
 }

h2 {
   @include m.adaptiveValue("font-size", 22, 18);
}

h3 {
   @include m.adaptiveValue("font-size", 18, 14);
}

a {
   color: inherit;
   &[class] {
      text-decoration: none;
   }

   &:focus-visible {
      outline: toRem(2) dashed var(--warning-color);
      outline-offset: toRem(4);
      transition-duration: 0s !important;
   }
}

button, 
label,
select,
input {
   &:focus-visible {
      outline: toRem(2) solid var(--warning-color);
      outline-offset: toRem(4);
      transition-duration: 0s !important;
   }
}

.iconify--my-icon {
   translate: 0 toRem(2);
   color: var(--dark-golden-color);
}

.loader {
   translate: 0 100%;
}

//*select start======================================================================================================================
.select-wrapper {
   position: relative;

 &::before,
   &::after{
      content: '';
      pointer-events: none;
      position: absolute;
      top: calc(50% - toRem(1));
      width: toRem(6);
      height: toRem(2);
      background-color: var(--warning-color);
   }
   &::before {
      right: toRem(9);
      transform: rotate(-125deg);
   }
   &::after {
      right: toRem(6);
      transform: rotate(125deg);
   }
 }
 .select {
   width: toEm(102);
   padding-inline: toEm(4);
   padding-block: toRem(1);
   border: toRem(2) solid var(--warning-color);
   border-radius: toEm(4, 16);
   outline: none;
   appearance: none;
   cursor: pointer;
   background-color: var(--light-color);
}
.option {
   border-radius: toRem(6);
  }
//*select end======================================================================================================================


.hidden-tablet {
   @media (max-width:c.$tablet){
      display: none;
   }
}

.hidden-mobile {
   @media (max-width:c.$mobile){
      display: none;
   }
}

.visible-tablet {
   @media (min-width:c.$tablet){
       display: none; 
   }
}

.visible-mobile {
   @media (min-width:c.$mobile){
       display: none; 
   }
}

.visually-hidden {
   position: absolute !important;
   width: 1px !important;
   height: 1px !important;
   margin: -1px !important;
   border: 0 !important;
   padding: 0 !important;
   white-space: nowrap !important;
   clip-path: inset(100%) !important;
   clip: rect(0 0 0 0) !important;
   overflow: hidden !important;
}